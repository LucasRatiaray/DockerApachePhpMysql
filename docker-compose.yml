# Configuration Docker Compose pour une application web

version: '3.8'

# Service Web : conteneur pour une application web avec Apache
services:
  web:
    build:
      context: site  # Le chemin du Dockerfile (dans le même répertoire)
      dockerfile: Dockerfile  # Nom du Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./www:/var/www/
      - ./server/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./server/apache2.conf:/etc/apache2/apache2.conf
      - ./server/php.ini:/usr/local/etc/php/php.ini

  # Service DB : conteneur pour une base de données MySQL
  db:
    image: mysql
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    command: --default-authentication-plugin=caching_sha2_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: main
    volumes:
      - ./script.sql:/script.sql
    # Utilisation du plugin "caching_sha2_password" recommandé pour l'authentification
    # Redémarrage automatique du conteneur en cas d'échec
    # Définition des variables d'environnement pour le mot de passe root et le nom de la base de données
    # Montage du fichier script.sql dans le conteneur pour l'importer dans la base de données

  # Service phpMyAdmin : interface d'administration de MySQL
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_ARBITRARY: 1
    # Service phpMyAdmin : interface d'administration de MySQL
    # Redémarrage automatique du conteneur en cas d'échec
    # Le conteneur expose le port 80 de phpMyAdmin sur le port 8080 de l'hôte
    # Définition de la variable d'environnement PMA_ARBITRARY=1 pour autoriser la connexion à des bases de données arbitraires